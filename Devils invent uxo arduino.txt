#include <Servo.h>
Servo s1;

const int leftForward = 2;
const int leftBackward = 3;
const int rightForward = 4;
const int rightBackward = 5;
int trig=7;
int echo=6;
long timeInMicro;
const byte npulse = 12; 
 
const byte pin_pulse = A0; 
const byte pin_cap  = A1; 
const byte pin_LED = 12; 
 

long distanceInCm;

void setup() 
{
  Serial.begin(9600);
  pinMode(7,OUTPUT);
  pinMode(6,INPUT);
  
  pinMode (leftForward, OUTPUT);
  pinMode(leftBackward, OUTPUT);
  pinMode (rightForward, OUTPUT); 
  pinMode (rightBackward, OUTPUT);
pinMode(pin_pulse, OUTPUT);
  digitalWrite(pin_pulse, LOW);
  pinMode(pin_cap, INPUT);
  pinMode(pin_LED, OUTPUT);
  digitalWrite(pin_LED, LOW);
  s1.attach(9)
  
}
const int nmeas = 256; 
long int sumsum = 0; 
long int skip = 0; 
long int diff = 0;     
long int flash_period = 0; 
long unsigned int prev_flash = 0; 


void loop()  
{
 digitalWrite(trig,LOW);
 delayMicroseconds(2);
 digitalWrite(trig,HIGH);
 delayMicroseconds(10);
 digitalWrite(trig,LOW);
 

 timeInMicro= pulseIn(echo,HIGH);

 distanceInCm = ((timeInMicro/29)/2);

 Serial.println(distanceInCm);
 delay(100);
  if(20 < distanceInCm < 30) { 
  digitalWrite(leftForward, HIGH); 
  digitalWrite(leftBackward, LOW); 
  digitalWrite(rightForward, LOW); 
  digitalWrite(rightBackward, LOW);
  
     
     if(distanceInCm < 20)
     { digitalWrite(leftForward, LOW); 
  digitalWrite(leftBackward, HIGH); 
  digitalWrite(rightForward, HIGH); 
  digitalWrite(rightBackward, LOW);
  }
  }
  else{digitalWrite(leftForward, HIGH); 
  digitalWrite(leftBackward, LOW); 
  digitalWrite(rightForward, LOW); 
  digitalWrite(rightBackward, HIGH)}
  if( distanceInCm < 10) { 
  digitalWrite(leftForward, LOW); 
  digitalWrite(leftBackward, LOW); 
  digitalWrite(rightForward, LOW); 
  digitalWrite(rightBackward, LOW);
  s1.write(180);
  delay(3000);
  s1.write(0);
  delay(5000);
 
  
   int minval = 2000;
  int maxval = 0;
 

  long unsigned int sum = 0;
  for (int imeas = 0; imeas < nmeas + 2; imeas++) {
    //reset the capacitor
    pinMode(pin_cap, OUTPUT);
    digitalWrite(pin_cap, LOW);
    delayMicroseconds(20);
    pinMode(pin_cap, INPUT);
    //apply pulses
    for (int ipulse = 0; ipulse < npulse; ipulse++) {
      digitalWrite(pin_pulse, HIGH); 
      delayMicroseconds(3);
      digitalWrite(pin_pulse, LOW); 
      delayMicroseconds(3);
    }
    //read the charge on the capacitor
    int val = analogRead(pin_cap); //takes 13x8=104 microseconds
    minval = min(val, minval);
    maxval = max(val, maxval);
    sum += val;
 
    //determine if LEDs should be on or off
    long unsigned int timestamp = millis();
    byte ledstat = 0;
    if (timestamp < prev_flash +12) {
      if (diff > 0)ledstat = 1;
      if (diff < 0)ledstat = 2;
    }
    if (timestamp > prev_flash + flash_period) {
      if (diff > 0)ledstat = 1;
      if (diff < 0)ledstat = 2;
      prev_flash = timestamp;
    }
    if (flash_period > 1000)ledstat = 0;
  

    //switch the LEDs to this setting
    if (ledstat == 0) {
      digitalWrite(pin_LED, LOW);
      
    }
    if (ledstat == 1) {
      digitalWrite(pin_LED, LOW);
     
  
  }
    
    if (ledstat == 2) {
      digitalWrite(pin_LED, HIGH);
    
   

  }
}
 
  
  
 
 
  sum -= minval; sum -= maxval;
 

  if (sumsum == 0) sumsum = sum << 6;
  long int avgsum = (sumsum + 32) >> 6;
  diff = sum - avgsum;
  if (abs(diff)<avgsum >> 10) {  
    sumsum = sumsum + sum - avgsum;
    skip = 0;
  } else {
    skip++;
  }
  if (skip > 64) {  
    sumsum = sum << 6;
    skip = 0;
  }
 

  if (diff == 0) flash_period = 1000000;
  else flash_period = avgsum / (2 * abs(diff));
  }